sap.ui.define(["sap/fe/core/PageController","sap/ui/model/json/JSONModel"],function(e,t){"use strict";return e.extend("adjustmentflowloan.ext.view.AdjustmentCashFlow",{onInit:function(){e.prototype.onInit.apply(this,arguments);this.getAppComponent().getRouter().attachRouteMatched(this._onObjectMatched,this)},_onObjectMatched1:async function(e){debugger;const o=window.location.href;const a=o.match(/ID=([0-9a-fA-F-]+)/);let n=null;if(a){n=a[1]}console.log("Contract ID:",n);let s=this.getModel().bindContext("/getcontractDetailsLoan(...)");s.setParameter("contractId",n);var r=await s.execute();var l=s.getBoundContext().getValue();var c=l.fixedFrom;var i=l.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var g=d(i);var p=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:g});debugger;this.setModel(p,"OldfixedDates");var f=sap.ui.getCore().getModel("NewStartEnd");this.setModel(f,"NewfixedDates");let w=sap.ui.getCore().getModel("test1");let h=w.getData().rows;this.setModel(new t({rows:h}),"test")},_onObjectMatched:async function(e){debugger;const o=window.location.href;const a=o.match(/ID=([0-9a-fA-F-]+)/);let n=null;if(a){n=a[1]}console.log("Contract ID:",n);let s=this.getModel().bindContext("/getcontractDetailsLoan(...)");s.setParameter("contractId",n);var r=await s.execute();var l=s.getBoundContext().getValue();var c=l.fixedFrom;var i=l.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var g=d(i);var p=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:g});debugger;this.setModel(p,"OldfixedDates");var f=sap.ui.getCore().getModel("NewStartEnd");this.setModel(f,"NewfixedDates");var w=sap.ui.getCore().getModel("NewTable");var h=w.getData().rows;var w=sap.ui.getCore().getModel("OldTable");var m=w.getData().rows;function M(e,t){e=Array.isArray(e)?e.filter(e=>e.flowType):[];t=Array.isArray(t)?t.filter(e=>e.flowType):[];const o=e=>{const[t,,o]=e.dueDate.split("/");return`${t}/${o}_${e.flowType}`};const a=new Set([...e.map(o),...t.map(o)]);const n=new Map(e.map(e=>[o(e),e]));const s=new Map(t.map(e=>[o(e),e]));const r=(e,t)=>{const o=[];a.forEach(a=>{if(e.has(a)){o.push(e.get(a))}else{const[e,n]=a.split("_");const[s,r]=e.split("/");o.push({dueDate:`${s}/01/${r}`,flowType:n,name:t.get(a)?.name||"",amount:0})}});return o};const l=r(n,s);const c=r(s,n);const i=(e,t)=>{const[o,,a]=e.dueDate.split("/").map(Number);const[n,,s]=t.dueDate.split("/").map(Number);if(a!==s)return a-s;if(o!==n)return o-n;return e.flowType.localeCompare(t.flowType)};l.sort(i);c.sort(i);console.log("âœ… Aligned lengths",l.length,c.length);return{oldData:l,newData:c}}const{oldData:b,newData:v}=M(m,h);console.log("Old Table",b);console.log("New Table",v);this.setModel(new t({rows:b}),"OldTableAdjustScreen");this.setModel(new t({rows:v}),"NewTableAdjustScreen");const D=m.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(D).forEach(e=>{D[e]=parseFloat(D[e].toFixed(2))});console.log(D);this.setModel(new t(D),"OldTableTotals");const x=h.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(x).forEach(e=>{x[e]=parseFloat(x[e].toFixed(2))});console.log(x);this.setModel(new t(x),"NewTableTotals")}})});
//# sourceMappingURL=AdjustmentCashFlow.controller.js.map