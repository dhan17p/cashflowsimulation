sap.ui.define(["sap/fe/core/PageController","sap/ui/model/json/JSONModel","sap/ui/export/Spreadsheet"],function(e,t,o){"use strict";let a;return e.extend("adjustmentflowloan.ext.view.AdjustmentCashFlow",{onInit:function(){e.prototype.onInit.apply(this,arguments);this.getAppComponent().getRouter().attachRouteMatched(this._onObjectMatched,this)},_onObjectMatched1:async function(e){debugger;const o=window.location.href;const a=o.match(/ID=([0-9a-fA-F-]+)/);let n=null;if(a){n=a[1]}console.log("Contract ID:",n);let l=this.getModel().bindContext("/getcontractDetailsLoan(...)");l.setParameter("contractId",n);var s=await l.execute();var r=l.getBoundContext().getValue();var c=r.fixedFrom;var i=r.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var p=d(i);var g=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:p});debugger;this.setModel(g,"OldfixedDates");var f=sap.ui.getCore().getModel("NewStartEnd");this.setModel(f,"NewfixedDates");let w=sap.ui.getCore().getModel("test1");let m=w.getData().rows;this.setModel(new t({rows:m}),"test")},_onObjectMatched:async function(e){debugger;const o=window.location.href;const n=o.match(/ID=([0-9a-fA-F-]+)/);a=null;if(n){a=n[1]}console.log("Contract ID:",a);let l=this.getModel().bindContext("/getcontractDetailsLoan(...)");l.setParameter("contractId",a);var s=await l.execute();var r=l.getBoundContext().getValue();var c=r.fixedFrom;var i=r.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var p=d(i);var g=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:p});debugger;this.setModel(g,"OldfixedDates");var f=sap.ui.getCore().getModel("NewStartEnd");this.setModel(f,"NewfixedDates");var w=sap.ui.getCore().getModel("NewTable");var m=w.getData().rows;var w=sap.ui.getCore().getModel("OldTable");var h=w.getData().rows;function b(e,t){e=Array.isArray(e)?e.filter(e=>e.flowType):[];t=Array.isArray(t)?t.filter(e=>e.flowType):[];const o=e=>{const[t,,o]=e.dueDate.split("/");return`${t}/${o}_${e.flowType}`};const a=new Set([...e.map(o),...t.map(o)]);const n=new Map(e.map(e=>[o(e),e]));const l=new Map(t.map(e=>[o(e),e]));const s=(e,t)=>{const o=[];a.forEach(a=>{if(e.has(a)){o.push(e.get(a))}else{const[e,n]=a.split("_");const[l,s]=e.split("/");o.push({dueDate:`${l}/01/${s}`,flowType:n,name:t.get(a)?.name||"",amount:0})}});return o};const r=s(n,l);const c=s(l,n);const i=(e,t)=>{const[o,,a]=e.dueDate.split("/").map(Number);const[n,,l]=t.dueDate.split("/").map(Number);if(a!==l)return a-l;if(o!==n)return o-n;return e.flowType.localeCompare(t.flowType)};r.sort(i);c.sort(i);console.log("âœ… Aligned lengths",r.length,c.length);return{oldData:r,newData:c}}const{oldData:M,newData:x}=b(h,m);console.log("Old Table",M);console.log("New Table",x);this.setModel(new t({rows:M}),"OldTableAdjustScreen");this.setModel(new t({rows:x}),"NewTableAdjustScreen");const T=h.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(T).forEach(e=>{T[e]=parseFloat(T[e].toFixed(2))});console.log(T);this.setModel(new t(T),"OldTableTotals");const y=m.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(y).forEach(e=>{y[e]=parseFloat(y[e].toFixed(2))});console.log(y);this.setModel(new t(y),"NewTableTotals")},onPostAdjustment:async function(e){debugger;let t=this.getModel("OldTableTotals").getData();let o=this.getModel("NewTableTotals").getData();let n=t["Interest Receivable"]||0;let l=o["Interest Receivable"]||0;let s=0;console.log("totalActInterest",n);console.log("totalAdjInterest",l);if(n||l){s=l-n}s=s.toFixed(2);console.log("calculatedInterest",s);let r=t["Principal Receivable"]||0;let c=o["Principal Receivable"]||0;let i=0;console.log("totalActPrincipal",r);console.log("totalAdjPrincipal",c);if(r||c){i=c-r}i=i.toFixed(2);console.log("calculatedPrincipal",i);let d=this.getModel().bindContext("/postAdjustmentLoan(...)");d.setParameter("contractId",a);d.setParameter("interest",s);d.setParameter("principal",i);await d.execute();sap.m.MessageToast.show("Adjustment done:\n"+"Interest: "+s+"\n"+"Principal: "+i,{duration:4e3,width:"20em",my:"center bottom",at:"center bottom"})},onExportTables:function(){this._exportTableModel("OldTableAdjustScreen","Actual_Cashflow.xlsx");this._exportTableModel("NewTableAdjustScreen","Adjusted_Cashflow.xlsx")},_exportTableModel:function(e,t){const a=this.getView().getModel(e);if(!a){sap.m.MessageToast.show("Model not found: "+e);return}const n=a.getProperty("/rows");if(!n||n.length===0){sap.m.MessageToast.show("No data available for "+e);return}const l=[{label:"Flow Type",property:"flowType"},{label:"Name",property:"name"},{label:"Due Date",property:"dueDate"},{label:"Amount",property:"amount",type:"number",scale:2}];const s={workbook:{columns:l},dataSource:n,fileName:t,worker:false};const r=new o(s);r.build().then(()=>{MessageToast.show(t+" exported successfully")}).finally(()=>{r.destroy()})}})});
//# sourceMappingURL=AdjustmentCashFlow.controller.js.map