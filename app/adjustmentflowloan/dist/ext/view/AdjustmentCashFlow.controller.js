sap.ui.define(["sap/fe/core/PageController","sap/ui/model/json/JSONModel","sap/ui/export/Spreadsheet"],function(e,t,o){"use strict";let a;return e.extend("adjustmentflowloan.ext.view.AdjustmentCashFlow",{onInit:function(){e.prototype.onInit.apply(this,arguments);this.getAppComponent().getRouter().attachRouteMatched(this._onObjectMatched,this)},_onObjectMatched1:async function(e){debugger;const o=window.location.href;const a=o.match(/ID=([0-9a-fA-F-]+)/);let s=null;if(a){s=a[1]}console.log("Contract ID:",s);let n=this.getModel().bindContext("/getcontractDetailsLoan(...)");n.setParameter("contractId",s);var l=await n.execute();var r=n.getBoundContext().getValue();var c=r.fixedFrom;var i=r.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var p=d(i);var g=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:p});debugger;this.setModel(g,"OldfixedDates");var m=sap.ui.getCore().getModel("NewStartEnd");this.setModel(m,"NewfixedDates");let f=sap.ui.getCore().getModel("test1");let w=f.getData().rows;this.setModel(new t({rows:w}),"test")},_onObjectMatched:async function(e){debugger;const o=window.location.href;const s=o.match(/ID=([0-9a-fA-F-]+)/);a=null;if(s){a=s[1]}console.log("Contract ID:",a);let n=this.getModel().bindContext("/getcontractDetailsLoan(...)");n.setParameter("contractId",a);var l=await n.execute();var r=n.getBoundContext().getValue();var c=r.fixedFrom;var i=r.fixedUntil;function d(e){if(!e)return"";const t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]}var u=d(c);var p=d(i);var g=new sap.ui.model.json.JSONModel({startFromOld:u,EndFromOld:p});debugger;this.setModel(g,"OldfixedDates");var m=sap.ui.getCore().getModel("NewStartEnd");this.setModel(m,"NewfixedDates");var f=sap.ui.getCore().getModel("NewTable");var w=f.getData().rows;var f=sap.ui.getCore().getModel("OldTable");var h=f.getData().rows;function x(e,t){e=Array.isArray(e)?e.filter(e=>e.flowType):[];t=Array.isArray(t)?t.filter(e=>e.flowType):[];const o=e=>{const[t,,o]=e.dueDate.split("/");return`${t}/${o}_${e.flowType}`};const a=new Set([...e.map(o),...t.map(o)]);const s=new Map(e.map(e=>[o(e),e]));const n=new Map(t.map(e=>[o(e),e]));const l=(e,t)=>{const o=[];a.forEach(a=>{if(e.has(a)){o.push(e.get(a))}else{const[e,s]=a.split("_");const[n,l]=e.split("/");o.push({dueDate:`${n}/01/${l}`,flowType:s,name:t.get(a)?.name||"",amount:0})}});return o};const r=l(s,n);const c=l(n,s);const i=(e,t)=>{const[o,,a]=e.dueDate.split("/").map(Number);const[s,,n]=t.dueDate.split("/").map(Number);if(a!==n)return a-n;if(o!==s)return o-s;return e.flowType.localeCompare(t.flowType)};r.sort(i);c.sort(i);console.log("âœ… Aligned lengths",r.length,c.length);return{oldData:r,newData:c}}const{oldData:b,newData:M}=x(h,w);console.log("Old Table",b);console.log("New Table",M);this.setModel(new t({rows:b}),"OldTableAdjustScreen");this.setModel(new t({rows:M}),"NewTableAdjustScreen");const y=h.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(y).forEach(e=>{y[e]=parseFloat(y[e].toFixed(2))});console.log(y);this.setModel(new t(y),"OldTableTotals");const T=w.reduce((e,t)=>{const o=t.name;const a=parseFloat(t.amount)||0;if(!e[o]){e[o]=0}e[o]+=a;return e},{});Object.keys(T).forEach(e=>{T[e]=parseFloat(T[e].toFixed(2))});console.log(T);this.setModel(new t(T),"NewTableTotals")},onPostAdjustment:async function(e){debugger;let t=this.getModel("OldTableTotals").getData();let o=this.getModel("NewTableTotals").getData();let s=t["Interest Receivable"]||0;let n=o["Interest Receivable"]||0;let l=0;console.log("totalActInterest",s);console.log("totalAdjInterest",n);if(s||n){l=n-s}l=l.toFixed(2);console.log("calculatedInterest",l);let r=t["Principal Receivable"]||0;let c=o["Principal Receivable"]||0;let i=0;console.log("totalActPrincipal",r);console.log("totalAdjPrincipal",c);if(r||c){i=c-r}i=i.toFixed(2);console.log("calculatedPrincipal",i);let d=this.getModel().bindContext("/postAdjustmentLoan(...)");d.setParameter("contractId",a);d.setParameter("interest",l);d.setParameter("principal",i);let u=new sap.m.Dialog({title:"Confirm Adjustment",type:"Message",content:new sap.m.VBox({items:[new sap.m.Text({text:"Please confirm the adjustment details:"}),new sap.m.Text({text:" "}),new sap.m.Text({text:"Interest Adjustment: "+l}),new sap.m.Text({text:"Principal Adjustment: "+i})]}),buttons:[new sap.m.Button({text:"Post Adjustment",type:"Accept",icon:"sap-icon://accept",tooltip:"Confirm adjustment",press:async function(){try{await d.execute();sap.m.MessageToast.show("Adjustment successfully executed!")}catch(e){sap.m.MessageBox.error("Error executing adjustment: "+e.message)}finally{u.close()}}}),new sap.m.Button({text:"Cancel",type:"Reject",icon:"sap-icon://decline",tooltip:"Cancel adjustment",press:function(){u.close()}})],afterClose:function(){u.destroy()}});u.addStyleClass("sapUiContentPadding");u.open()},onExportTables:function(){this._exportTableModel("OldTableAdjustScreen","Actual_Cashflow.xlsx");this._exportTableModel("NewTableAdjustScreen","Adjusted_Cashflow.xlsx")},_exportTableModel:function(e,t){const a=this.getView().getModel(e);if(!a){sap.m.MessageToast.show("Model not found: "+e);return}const s=a.getProperty("/rows");if(!s||s.length===0){sap.m.MessageToast.show("No data available for "+e);return}const n=[{label:"Flow Type",property:"flowType"},{label:"Name",property:"name"},{label:"Due Date",property:"dueDate"},{label:"Amount",property:"amount",type:"number",scale:2}];const l={workbook:{columns:n},dataSource:s,fileName:t,worker:false};const r=new o(l);r.build().then(()=>{MessageToast.show(t+" exported successfully")}).finally(()=>{r.destroy()})}})});
//# sourceMappingURL=AdjustmentCashFlow.controller.js.map